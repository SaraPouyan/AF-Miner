
FUNCTION_BLOCK FAF

VAR_INPUT				// Define input variables
	DistanceFromBest : REAL;
	FitnessRanking   : REAL;
	IterationNumber  : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	Weight : REAL;
END_VAR

FUZZIFY DistanceFromBest
	  TERM low  := Gauss2 0.0 0.0 0.04 0.1159;
      TERM mid  := Gauss2 0.46 0.1159 0.54 0.1159;
      TERM high := Gauss2 0.96 0.1159  1.0 0.0;
END_FUZZIFY

FUZZIFY FitnessRanking
	  TERM low  := Gauss2 0.0 0.0 0.04 0.1159;
      TERM mid  := Gauss2 0.46 0.1159 0.54 0.1159;
      TERM high := Gauss2 0.96 0.1159  1.0 0.0;
END_FUZZIFY

FUZZIFY IterationNumber
	  TERM low  := Gauss2 0.0119 0.0 0.39 0.13;
      TERM mid  := Gauss2 0.763 0.139  0.837 0.05349;
      TERM high := Gauss2  1.01 0.0599  1.02 0.0;
END_FUZZIFY

DEFUZZIFY Weight
	  TERM veryLow  := (0.85,0) (0.9,1) (0.921,1) (0.941,0);
	  TERM low      := (0.875,0) (0.93,1) (0.94,1) (0.961,0);
	  TERM mid      := (0.94,0) (0.958,0.99) (0.96,1) (0.981,0);
	  TERM high     := (0.96,0) (0.98,1) (0.99,0.99) (1,0);
	  TERM veryHigh := (0.98,0) (1,1) (1.02,0);
	  METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	  DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1  : IF DistanceFromBest IS  low  AND FitnessRanking IS  low  AND IterationNumber IS high THEN Weight IS veryLow;
	RULE 2  : IF DistanceFromBest IS  low  AND FitnessRanking IS  low  AND IterationNumber IS mid  THEN Weight IS veryLow;
	RULE 3  : IF DistanceFromBest IS  low  AND FitnessRanking IS  low  AND IterationNumber IS low  THEN Weight IS low;
	RULE 4  : IF DistanceFromBest IS  low  AND FitnessRanking IS  mid  AND IterationNumber IS high THEN Weight IS low;
        RULE 5  : IF DistanceFromBest IS  low  AND FitnessRanking IS  mid  AND IterationNumber IS mid  THEN Weight IS mid;
        RULE 6  : IF DistanceFromBest IS  low  AND FitnessRanking IS  mid  AND IterationNumber IS low  THEN Weight IS high;
        RULE 7  : IF DistanceFromBest IS  low  AND FitnessRanking IS  high AND IterationNumber IS high THEN Weight IS low;
        RULE 8  : IF DistanceFromBest IS  low  AND FitnessRanking IS  high AND IterationNumber IS mid  THEN Weight IS mid;
        RULE 9  : IF DistanceFromBest IS  low  AND FitnessRanking IS  high AND IterationNumber IS low  THEN Weight IS veryLow;
        RULE 10 : IF DistanceFromBest IS  mid  AND FitnessRanking IS  low  AND IterationNumber IS high THEN Weight IS veryLow;
        RULE 11 : IF DistanceFromBest IS  mid  AND FitnessRanking IS  low  AND IterationNumber IS mid  THEN Weight IS low;
        RULE 12 : IF DistanceFromBest IS  mid  AND FitnessRanking IS  low  AND IterationNumber IS low  THEN Weight IS mid;
        RULE 13 : IF DistanceFromBest IS  mid  AND FitnessRanking IS  mid  AND IterationNumber IS high THEN Weight IS low;
        RULE 14 : IF DistanceFromBest IS  mid  AND FitnessRanking IS  mid  AND IterationNumber IS mid  THEN Weight IS mid;
        RULE 15 : IF DistanceFromBest IS  mid  AND FitnessRanking IS  mid  AND IterationNumber IS low  THEN Weight IS high;
        RULE 16 : IF DistanceFromBest IS  mid  AND FitnessRanking IS  high AND IterationNumber IS high THEN Weight IS mid;
        RULE 17 : IF DistanceFromBest IS  mid  AND FitnessRanking IS  high AND IterationNumber IS mid  THEN Weight IS high;
        RULE 18 : IF DistanceFromBest IS  mid  AND FitnessRanking IS  high AND IterationNumber IS low  THEN Weight IS veryHigh;
        RULE 19 : IF DistanceFromBest IS  high AND FitnessRanking IS  low  AND IterationNumber IS high THEN Weight IS low;
        RULE 20 : IF DistanceFromBest IS  high AND FitnessRanking IS  low  AND IterationNumber IS mid  THEN Weight IS mid;
        RULE 21 : IF DistanceFromBest IS  high AND FitnessRanking IS  low  AND IterationNumber IS low  THEN Weight IS high;
        RULE 22 : IF DistanceFromBest IS  high AND FitnessRanking IS  mid  AND IterationNumber IS high THEN Weight IS mid;
        RULE 23 : IF DistanceFromBest IS  high AND FitnessRanking IS  mid  AND IterationNumber IS low  THEN Weight IS high;
        RULE 24 : IF DistanceFromBest IS  high AND FitnessRanking IS  mid  AND IterationNumber IS mid  THEN Weight IS veryHigh;
        RULE 25 : IF DistanceFromBest IS  high AND FitnessRanking IS  high AND IterationNumber IS high THEN Weight IS mid;
        RULE 26 : IF DistanceFromBest IS  high AND FitnessRanking IS  high AND IterationNumber IS mid  THEN Weight IS high;
        RULE 27 : IF DistanceFromBest IS  high AND FitnessRanking IS  high AND IterationNumber IS low  THEN Weight IS veryLow;
END_RULEBLOCK

END_FUNCTION_BLOCK
